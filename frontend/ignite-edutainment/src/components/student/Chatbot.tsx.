import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { X, Bot } from 'lucide-react';
import { GoogleGenerativeAI } from '@google/generative-ai';

const GEMINI_API_KEY = 'AIzaSyA1TwFbfiTO0ofMOcbRIC7EbRtknWv-Mvs'; // REPLACE WITH YOUR ACTUAL GEMINI API KEY
const genAI = new GoogleGenerativeAI(GEMINI_API_KEY);

const Chatbot = ({ onClose }) => {
  const [messages, setMessages] = useState([]);
  const [input, setInput] = useState('');

  const handleSend = async () => {
    if (!input.trim()) return;

    const userMessage = { text: input, sender: 'user' };
    setMessages((prevMessages) => [...prevMessages, userMessage]);
    setInput('');

    try {
      const model = genAI.getGenerativeModel({ model: "gemini-1.5-pro" });
      const result = await model.generateContent(input);
      const response = await result.response;
      const text = response.text();
      const botResponse = { text: text, sender: 'bot' };
      setMessages((prevMessages) => [...prevMessages, botResponse]);
    } catch (error) {
      console.error('Error sending message to chatbot:', error);
      const errorMessage = { text: 'Sorry, I am having trouble connecting to the AI. Please try again later.', sender: 'bot' };
      setMessages((prevMessages) => [...prevMessages, errorMessage]);
    }
  };

  return (
    <div className="fixed bottom-4 right-4 w-80 bg-card border border-border rounded-lg shadow-lg flex flex-col">
      <div className="flex justify-between items-center p-2 border-b border-border">
        <div className="flex items-center gap-2">
          <Bot className="w-5 h-5 text-primary" />
          <h3 className="font-semibold">Doubt Solver</h3>
        </div>
        <Button variant="ghost" size="icon" onClick={onClose}>
          <X className="w-4 h-4" />
        </Button>
      </div>
      <div className="flex-1 p-2 overflow-y-auto h-64">
        {messages.map((msg, index) => (
          <div
            key={index}
            className={`my-1 p-2 rounded-lg text-sm ${
              msg.sender === 'user'
                ? 'bg-primary text-primary-foreground ml-auto'
                : 'bg-secondary'
            }`}
          >
            {msg.text}
          </div>
        ))}
      </div>
      <div className="p-2 border-t border-border flex gap-2">
        <Input
          value={input}
          onChange={(e) => setInput(e.target.value)}
          onKeyPress={(e) => e.key === 'Enter' && handleSend()}
          placeholder="Ask a question..."
        />
        <Button onClick={handleSend}>Send</Button>
      </div>
    </div>
  );
};

export default Chatbot;

